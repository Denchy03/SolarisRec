// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SolarisRec.Persistence;

#nullable disable

namespace SolarisRec.Persistence.Migrations
{
    [DbContext(typeof(SolarisRecDbContext))]
    [Migration("20211231091044_CardEntitiesOne")]
    partial class CardEntitiesOne
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SolarisRec.Persistence.PersistenceModel.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("VARCHAR(320)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountName")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("AccountName"), false);

                    b.HasIndex("Email")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("Email"), false);

                    b.ToTable("Accounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountName = "Superuser",
                            Email = "major.martin.tibor@gmail.com",
                            Password = "ThisPasswordIsOmegaSecureXD"
                        });
                });

            modelBuilder.Entity("SolarisRec.Persistence.PersistenceModel.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AttackValue")
                        .HasColumnType("int");

                    b.Property<int?>("HealthValue")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cards", (string)null);
                });

            modelBuilder.Entity("SolarisRec.Persistence.PersistenceModel.Deck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("Decks", (string)null);
                });

            modelBuilder.Entity("SolarisRec.Persistence.PersistenceModel.Expansion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("Name"), false);

                    b.ToTable("Expansions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "So it Begins"
                        });
                });

            modelBuilder.Entity("SolarisRec.Persistence.PersistenceModel.Faction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("Name"), false);

                    b.ToTable("Factions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mars"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mercury"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Titan"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bel"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Earth"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Venus"
                        });
                });

            modelBuilder.Entity("SolarisRec.Persistence.PersistenceModel.JoiningTables.CardTalent", b =>
                {
                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("TalentId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CardId", "TalentId");

                    b.HasIndex("TalentId");

                    b.ToTable("CardTalents", (string)null);
                });

            modelBuilder.Entity("SolarisRec.Persistence.PersistenceModel.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("Name"), false);

                    b.ToTable("Resources", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Martian"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mercurian"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Titanian"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Beltian"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Earthian"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Venusian"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Any"
                        });
                });

            modelBuilder.Entity("SolarisRec.Persistence.PersistenceModel.Talent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("Name"), false);

                    b.ToTable("Talents", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Yellow"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Blue"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Red"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Black"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Green"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Purple"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Any"
                        });
                });

            modelBuilder.Entity("SolarisRec.Persistence.PersistenceModel.JoiningTables.CardTalent", b =>
                {
                    b.HasOne("SolarisRec.Persistence.PersistenceModel.Card", "Card")
                        .WithMany("CardTalents")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SolarisRec.Persistence.PersistenceModel.Talent", "Talent")
                        .WithMany("CardTalents")
                        .HasForeignKey("TalentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Talent");
                });

            modelBuilder.Entity("SolarisRec.Persistence.PersistenceModel.Card", b =>
                {
                    b.Navigation("CardTalents");
                });

            modelBuilder.Entity("SolarisRec.Persistence.PersistenceModel.Talent", b =>
                {
                    b.Navigation("CardTalents");
                });
#pragma warning restore 612, 618
        }
    }
}
